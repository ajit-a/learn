Example 1: Integer Addition

Description:
This example contains a client and a server that communicate via XML-RPC.
The client takes as command-line parameters the address of the server (in 
the form host:port), as well as two integers.  The client executes the 
"server.add" RPC on the server, passing the two strings as parameters.
Normally, these strings would be converted to integers and validated by 
the client, but this example is designed to demonstrate exception 
handling in XML-RPC.  If the server cannot convert the two strings to 
integers, it throws an exception, which is caught by the client.  If 
the two integers are valid, the server adds them and returns the sum 
as the return value of the RPC.

XML-RPC Libraries:
This example uses the Apache XML-RPC library: ws.apache.org/xmlrpc.  One of 
the Apache commons libraries, commons-codec, is also required.  Both of these 
libraries are provided in the "lib" directory.

Building Example 1:
To build the example, use the build.sh script.

Ex: ./build.sh or sh build.sh.

Executing Example 1:
Use the  start_client.sh and start_server.sh scripts.
Note: The Java example does not seem to work on ccc1 at this time.  Any of the 
other CCC machines should work fine.  For the rest of this document, we will 
use ccc2.

Ex: To start the server on port 9382
./start_server.sh 9382

Ex: To execute the server.add RPC on the server started above, adding 2+2
./start_client.sh ccc2.wpi.edu:9382 2 2

You can test out the exception handling by providing invalid input.
Ex: ./start_client.sh ccc2.wpi.edu:9382 2 A

The server can be shutdown via XML-RPC by using the following command:
./start_client.sh ccc2.wpi.edu:9382 shutdown

One of the best advantages of XML-RPC is that it is language-independent.
Try using the C++ client with the Java server or vice versa.

